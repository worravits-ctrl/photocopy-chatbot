require('dotenv').config(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å .env file

const line = require('@line/bot-sdk');
const express = require('express');
const XLSX = require('xlsx');
const path = require('path');

// Configuration - ‡πÉ‡∏ä‡πâ Environment Variables
const config = {
  channelAccessToken: process.env.CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.CHANNEL_SECRET
};

const client = new line.Client(config);
const app = express();

// Middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(express.static('public')); // ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡πÑ‡∏ü‡∏•‡πå static

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const shopInfo = {
  name: "‡∏£‡πâ‡∏≤‡∏ô‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ ‡πÄ‡∏à‡πâ‡πÄ‡∏Å‡πà‡∏≤",
  openTime: "08:00",
  closeTime: "18:00",
  phone: "081-234-5678",
  address: "123 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏±‡∏ä‡∏î‡∏≤‡∏†‡∏¥‡πÄ‡∏©‡∏Å ‡πÅ‡∏Ç‡∏ß‡∏á‡∏•‡∏≤‡∏î‡∏¢‡∏≤‡∏ß ‡πÄ‡∏Ç‡∏ï‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10900"
};

// ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (‡∏à‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å Excel ‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á)
let priceTable = {
  "A4": {
    "‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥": { "‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß": 1, "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á": 1.5 },
    "‡∏™‡∏µ": { "‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß": 5, "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á": 8 }
  },
  "A3": {
    "‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥": { "‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß": 3, "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á": 5 },
    "‡∏™‡∏µ": { "‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß": 12, "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á": 20 }
  },
  "A5": {
    "‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥": { "‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß": 0.5, "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á": 1 },
    "‡∏™‡∏µ": { "‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß": 3, "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á": 5 }
  }
};

// ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
const userSessions = {};

// ===================== ROUTES =====================

// ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å - Dashboard
app.get('/', (req, res) => {
  res.json({
    status: 'online',
    message: '‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡∏£‡πâ‡∏≤‡∏ô‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô',
    shop: shopInfo,
    endpoints: {
      webhook: '/webhook',
      status: '/status',
      prices: '/api/prices',
      test: '/test'
    },
    timestamp: new Date().toLocaleString('th-TH', {
      timeZone: 'Asia/Bangkok'
    })
  });
});

// ‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
app.get('/status', (req, res) => {
  res.json({
    server: 'running',
    shop: shopInfo.name,
    hours: `${shopInfo.openTime} - ${shopInfo.closeTime}`,
    priceTableLoaded: Object.keys(priceTable).length > 0,
    activeSessions: Object.keys(userSessions).length,
    timestamp: new Date().toLocaleString('th-TH', {
      timeZone: 'Asia/Bangkok'
    })
  });
});

// API ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤
app.get('/api/prices', (req, res) => {
  res.json({
    success: true,
    data: priceTable,
    shop: shopInfo.name
  });
});

// ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö
app.get('/test', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html lang="th">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>${shopInfo.name} - ‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó</title>
        <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                max-width: 600px;
                margin: 50px auto;
                padding: 20px;
                background-color: #f5f5f5;
            }
            .container {
                background: white;
                padding: 30px;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            h1 {
                color: #1DB446;
                text-align: center;
                margin-bottom: 30px;
            }
            .status {
                background: #e8f5e8;
                padding: 15px;
                border-radius: 5px;
                margin-bottom: 20px;
                border-left: 4px solid #1DB446;
            }
            .info-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                gap: 20px;
                margin: 20px 0;
            }
            .info-card {
                background: #f9f9f9;
                padding: 15px;
                border-radius: 5px;
                border: 1px solid #ddd;
            }
            .endpoints {
                background: #fff3cd;
                padding: 15px;
                border-radius: 5px;
                border-left: 4px solid #ffc107;
            }
            .endpoint {
                margin: 10px 0;
                padding: 8px;
                background: white;
                border-radius: 3px;
                font-family: monospace;
            }
            a {
                color: #1DB446;
                text-decoration: none;
            }
            a:hover {
                text-decoration: underline;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>ü§ñ ${shopInfo.name}</h1>
            
            <div class="status">
                <strong>‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥</strong><br>
                ‡πÄ‡∏ß‡∏•‡∏≤: ${new Date().toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' })}
            </div>

            <div class="info-grid">
                <div class="info-card">
                    <h3>üìç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô</h3>
                    <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> ${shopInfo.name}</p>
                    <p><strong>‡πÄ‡∏ß‡∏•‡∏≤:</strong> ${shopInfo.openTime} - ${shopInfo.closeTime} ‡∏ô.</p>
                    <p><strong>‡πÇ‡∏ó‡∏£:</strong> ${shopInfo.phone}</p>
                </div>
                
                <div class="info-card">
                    <h3>üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥</h3>
                    <p><strong>‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤:</strong> ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>
                    <p><strong>‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö:</strong> ${Object.keys(priceTable).join(', ')}</p>
                    <p><strong>‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå:</strong> ${Object.keys(userSessions).length} ‡∏Ñ‡∏ô</p>
                </div>
            </div>

            <div class="endpoints">
                <h3>üîó API Endpoints</h3>
                <div class="endpoint">
                    <strong>GET</strong> <a href="/">/ </a> - ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
                </div>
                <div class="endpoint">
                    <strong>GET</strong> <a href="/status">/status</a> - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
                </div>
                <div class="endpoint">
                    <strong>GET</strong> <a href="/api/prices">/api/prices</a> - ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤
                </div>
                <div class="endpoint">
                    <strong>POST</strong> /webhook - LINE Bot Webhook
                </div>
            </div>

            <div style="text-align: center; margin-top: 30px; color: #666;">
                <p>üöÄ ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ LINE Bot SDK</p>
                <p><small>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å LINE...</small></p>
            </div>
        </div>
    </body>
    </html>
  `);
});

// ===================== LINE BOT WEBHOOK =====================

// Webhook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LINE Bot
app.post('/webhook', line.middleware(config), (req, res) => {
  Promise
    .all(req.body.events.map(handleEvent))
    .then((result) => res.json(result))
    .catch((err) => {
      console.error('‚ùå Webhook Error:', err);
      res.status(500).end();
    });
});

// ===================== HELPER FUNCTIONS =====================

// ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å Excel
function loadPriceTableFromExcel(filePath) {
  try {
    const workbook = XLSX.readFile(filePath);
    const worksheet = workbook.Sheets[workbook.SheetNames[0]];
    const data = XLSX.utils.sheet_to_json(worksheet);
    
    const newPriceTable = {};
    data.forEach(row => {
      if (!newPriceTable[row.‡∏Ç‡∏ô‡∏≤‡∏î]) {
        newPriceTable[row.‡∏Ç‡∏ô‡∏≤‡∏î] = {};
      }
      if (!newPriceTable[row.‡∏Ç‡∏ô‡∏≤‡∏î][row.‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó]) {
        newPriceTable[row.‡∏Ç‡∏ô‡∏≤‡∏î][row.‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó] = {};
      }
      newPriceTable[row.‡∏Ç‡∏ô‡∏≤‡∏î][row.‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó][row.‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö] = row.‡∏£‡∏≤‡∏Ñ‡∏≤;
    });
    
    priceTable = newPriceTable;
    console.log("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å Excel ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
  } catch (error) {
    console.error("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å Excel:", error.message);
    console.log("üìã ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÅ‡∏ó‡∏ô");
  }
}

// ===================== LINE BOT EVENT HANDLERS =====================

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Events ‡∏ï‡πà‡∏≤‡∏á‡πÜ
async function handleEvent(event) {
  if (event.type !== 'message' || event.message.type !== 'text') {
    return Promise.resolve(null);
  }

  const userId = event.source.userId;
  const userMessage = event.message.text.toLowerCase();

  console.log(`üë§ User ${userId.substring(0, 8)}...: ${event.message.text}`);

  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô session ‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
  if (!userSessions[userId]) {
    userSessions[userId] = {
      state: 'idle',
      order: {},
      lastActivity: new Date()
    };
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  userSessions[userId].lastActivity = new Date();

  const session = userSessions[userId];
  let replyMessage;

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ
  if (userMessage.includes('‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ') || userMessage.includes('hello') || userMessage.includes('hi')) {
    replyMessage = getWelcomeMessage();
  } else if (userMessage.includes('‡πÄ‡∏ß‡∏•‡∏≤') || userMessage.includes('‡πÄ‡∏õ‡∏¥‡∏î') || userMessage.includes('‡∏õ‡∏¥‡∏î')) {
    replyMessage = getShopHours();
  } else if (userMessage.includes('‡∏£‡∏≤‡∏Ñ‡∏≤') || userMessage.includes('‡∏Ñ‡∏¥‡∏î') || userMessage.includes('‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì')) {
    session.state = 'calculating';
    session.order = {};
    replyMessage = startPriceCalculation();
  } else if (userMessage.includes('‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà') || userMessage.includes('‡πÑ‡∏õ') || userMessage.includes('address')) {
    replyMessage = getShopAddress();
  } else if (userMessage.includes('‡πÇ‡∏ó‡∏£') || userMessage.includes('phone')) {
    replyMessage = getShopPhone();
  } else if (userMessage.includes('‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å') || userMessage.includes('cancel')) {
    session.state = 'idle';
    session.order = {};
    replyMessage = {
      type: 'text',
      text: '‚úÖ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß\n‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞'
    };
  } else if (session.state === 'calculating') {
    replyMessage = await handlePriceCalculation(session, userMessage);
  } else {
    replyMessage = getHelpMessage();
  }

  return client.replyMessage(event.replyToken, replyMessage);
}

// ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
function getWelcomeMessage() {
  return {
    type: 'flex',
    altText: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡πâ‡∏≤‡∏ô‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£',
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: shopInfo.name,
            weight: 'bold',
            size: 'xl',
            color: '#1DB446'
          }
        ]
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏∞! üòä',
            size: 'md',
            weight: 'bold'
          },
          {
            type: 'text',
            text: '‡πÄ‡∏£‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:',
            margin: 'md'
          },
          {
            type: 'text',
            text: 'üìÑ ‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥/‡∏™‡∏µ\nüìè ‡∏Ç‡∏ô‡∏≤‡∏î A3, A4, A5\nüí∞ ‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡πâ‡∏ü‡∏£‡∏µ\n‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î\nüìç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡πâ‡∏≤‡∏ô',
            wrap: true,
            margin: 'sm'
          }
        ]
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            style: 'primary',
            action: {
              type: 'message',
              label: 'üí∞ ‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤',
              text: '‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤'
            }
          }
        ]
      }
    }
  };
}

// ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î
function getShopHours() {
  const now = new Date().toLocaleString('th-TH', {
    timeZone: 'Asia/Bangkok',
    hour: '2-digit',
    minute: '2-digit'
  });
  
  return {
    type: 'text',
    text: `‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£\n${shopInfo.name}\n\n‡πÄ‡∏õ‡∏¥‡∏î: ${shopInfo.openTime} ‡∏ô.\n‡∏õ‡∏¥‡∏î: ${shopInfo.closeTime} ‡∏ô.\n\n‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏ô‡∏±‡∏Å‡∏Ç‡∏±‡∏ï‡∏§‡∏Å‡∏©‡πå)\n\nüïê ‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ: ${now} ‡∏ô.`
  };
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
function getShopAddress() {
  return {
    type: 'text',
    text: `üìç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡πâ‡∏≤‡∏ô\n${shopInfo.address}\n\n‚òéÔ∏è ‡πÇ‡∏ó‡∏£: ${shopInfo.phone}\n\nüöó ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô\n‡πÄ‡∏ß‡∏•‡∏≤ ${shopInfo.openTime} - ${shopInfo.closeTime} ‡∏ô.`
  };
}

// ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
function getShopPhone() {
  return {
    type: 'text',
    text: `‚òéÔ∏è ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠\n‡πÇ‡∏ó‡∏£: ${shopInfo.phone}\n\n‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏ú‡πà‡∏≤‡∏ô LINE Chat ‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞\n\n‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£: ${shopInfo.openTime} - ${shopInfo.closeTime} ‡∏ô.`
  };
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤
function startPriceCalculation() {
  return {
    type: 'flex',
    altText: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©',
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: 'üí∞ ‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£',
            weight: 'bold',
            size: 'xl',
            color: '#1DB446'
          }
        ]
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©:',
            size: 'md',
            weight: 'bold'
          },
          {
            type: 'text',
            text: '‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î',
            size: 'sm',
            color: '#666666',
            margin: 'sm'
          }
        ]
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        spacing: 'sm',
        contents: [
          {
            type: 'button',
            style: 'secondary',
            action: {
              type: 'message',
              label: 'üìÑ A4 (21√ó29.7 ‡∏ã‡∏°.)',
              text: 'A4'
            }
          },
          {
            type: 'button',
            style: 'secondary',
            action: {
              type: 'message',
              label: 'üìÑ A3 (29.7√ó42 ‡∏ã‡∏°.)',
              text: 'A3'
            }
          },
          {
            type: 'button',
            style: 'secondary',
            action: {
              type: 'message',
              label: 'üìÑ A5 (14.8√ó21 ‡∏ã‡∏°.)',
              text: 'A5'
            }
          }
        ]
      }
    }
  };
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤
async function handlePriceCalculation(session, userMessage) {
  const order = session.order;

  // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î
  if (!order.size && (userMessage.includes('a4') || userMessage.includes('a3') || userMessage.includes('a5'))) {
    order.size = userMessage.toUpperCase();
    return {
      type: 'flex',
      altText: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå',
      contents: {
        type: 'bubble',
        body: {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'text',
              text: `‚úÖ ‡∏Ç‡∏ô‡∏≤‡∏î: ${order.size}`,
              color: '#1DB446',
              weight: 'bold'
            },
            {
              type: 'text',
              text: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå:',
              margin: 'md',
              weight: 'bold'
            }
          ]
        },
        footer: {
          type: 'box',
          layout: 'vertical',
          spacing: 'sm',
          contents: [
            {
              type: 'button',
              style: 'secondary',
              action: {
                type: 'message',
                label: '‚ö´ ‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥ (‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î)',
                text: '‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥'
              }
            },
            {
              type: 'button',
              style: 'primary',
              action: {
                type: 'message',
                label: 'üåà ‡∏™‡∏µ (‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á)',
                text: '‡∏™‡∏µ'
              }
            }
          ]
        }
      }
    };
  }

  // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 2: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
  if (order.size && !order.type && (userMessage.includes('‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥') || userMessage.includes('‡∏™‡∏µ'))) {
    order.type = userMessage.includes('‡∏™‡∏µ') ? '‡∏™‡∏µ' : '‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥';
    return {
      type: 'flex',
      altText: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå',
      contents: {
        type: 'bubble',
        body: {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'text',
              text: `‚úÖ ‡∏Ç‡∏ô‡∏≤‡∏î: ${order.size}\n‚úÖ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${order.type}`,
              color: '#1DB446',
              weight: 'bold'
            },
            {
              type: 'text',
              text: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå:',
              margin: 'md',
              weight: 'bold'
            }
          ]
        },
        footer: {
          type: 'box',
          layout: 'vertical',
          spacing: 'sm',
          contents: [
            {
              type: 'button',
              style: 'secondary',
              action: {
                type: 'message',
                label: 'üìÑ ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (1 ‡∏´‡∏ô‡πâ‡∏≤)',
                text: '‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß'
              }
            },
            {
              type: 'button',
              style: 'secondary',
              action: {
                type: 'message',
                label: 'üìÑüìÑ ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á (2 ‡∏´‡∏ô‡πâ‡∏≤)',
                text: '‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á'
              }
            }
          ]
        }
      }
    };
  }

  // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 3: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
  if (order.size && order.type && !order.format && (userMessage.includes('‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß') || userMessage.includes('‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á'))) {
    order.format = userMessage.includes('‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á') ? '‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á' : '‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß';
    
    const pricePerUnit = priceTable[order.size]?.[order.type]?.[order.format] || 0;
    
    return {
      type: 'text',
      text: `‚úÖ ‡∏Ç‡∏ô‡∏≤‡∏î: ${order.size}\n‚úÖ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${order.type}\n‚úÖ ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: ${order.format}\n\nüí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: ${pricePerUnit} ‡∏ö‡∏≤‡∏ó/‡πÅ‡∏ú‡πà‡∏ô\n\nüìù ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ú‡πà‡∏ô\n(‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÄ‡∏ä‡πà‡∏ô 10, 50, 100)\n\n‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î`
    };
  }

  // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 4: ‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
  if (order.size && order.type && order.format && !order.quantity) {
    const quantity = parseInt(userMessage);
    if (isNaN(quantity) || quantity <= 0) {
      return {
        type: 'text',
        text: '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n\nüìù ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\n‚Ä¢ 10 (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 10 ‡πÅ‡∏ú‡πà‡∏ô)\n‚Ä¢ 50 (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 50 ‡πÅ‡∏ú‡πà‡∏ô)\n‚Ä¢ 100 (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 100 ‡πÅ‡∏ú‡πà‡∏ô)\n\n‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î'
      };
    }

    if (quantity > 1000) {
      return {
        type: 'text',
        text: '‚ö†Ô∏è ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ!\n\n‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1,000 ‡πÅ‡∏ú‡πà‡∏ô\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á\n\n‚òéÔ∏è ‡πÇ‡∏ó‡∏£: ' + shopInfo.phone
      };
    }

    order.quantity = quantity;
    const result = calculatePrice(order);
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï session
    session.state = 'idle';
    session.order = {};

    return result;
  }

  // ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
  return {
    type: 'text',
    text: '‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏î‡∏¢‡∏û‡∏¥‡∏°‡∏û‡πå: "‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤"\n‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î'
  };
}

// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤
function calculatePrice(order) {
  const { size, type, format, quantity } = order;
  
  if (!priceTable[size] || !priceTable[size][type] || !priceTable[size][type][format]) {
    return {
      type: 'text',
      text: '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á\n\n‚òéÔ∏è ‡πÇ‡∏ó‡∏£: ' + shopInfo.phone
    };
  }

  const pricePerUnit = priceTable[size][type][format];
  const totalPrice = pricePerUnit * quantity;

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
  let discount = 0;
  let discountText = '';
  if (quantity >= 100) {
    discount = totalPrice * 0.05; // ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 5% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 100 ‡πÅ‡∏ú‡πà‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ
    discountText = `\nüéâ ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 5% (${quantity}+ ‡πÅ‡∏ú‡πà‡∏ô): -${discount} ‡∏ö‡∏≤‡∏ó`;
  }

  const finalPrice = totalPrice - discount;

  return {
    type: 'flex',
    altText: `‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° ${finalPrice} ‡∏ö‡∏≤‡∏ó`,
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: 'üí∞ ‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤',
            weight: 'bold',
            size: 'xl',
            color: '#1DB446'
          },
          {
            type: 'text',
            text: shopInfo.name,
            size: 'sm',
            color: '#666666'
          }
        ]
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: 'üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á:',
            weight: 'bold',
            margin: 'md'
          },
          {
            type: 'text',
            text: `‚Ä¢ ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©: ${size}\n‚Ä¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${type}\n‚Ä¢ ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: ${format}\n‚Ä¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${quantity.toLocaleString()} ‡πÅ‡∏ú‡πà‡∏ô`,
            margin: 'sm',
            wrap: true
          },
          {
            type: 'separator',
            margin: 'md'
          },
          {
            type: 'text',
            text: 'üíµ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤:',
            weight: 'bold',
            margin: 'md'
          },
          {
            type: 'text',
            text: `${pricePerUnit} ‡∏ö‡∏≤‡∏ó/‡πÅ‡∏ú‡πà‡∏ô √ó ${quantity.toLocaleString()} ‡πÅ‡∏ú‡πà‡∏ô = ${totalPrice.toLocaleString()} ‡∏ö‡∏≤‡∏ó${discountText}`,
            margin: 'sm',
            wrap: true
          },
          {
            type: 'text',
            text: `üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°: ${finalPrice.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
            size: 'xl',
            weight: 'bold',
            color: '#FF6B35',
            margin: 'sm'
          }
        ]
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: 'üìû ‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå: ' + shopInfo.phone,
            size: 'sm',
            color: '#666666',
            align: 'center',
            margin: 'md'
          },
          {
            type: 'text',
            text: `‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£: ${shopInfo.openTime} - ${shopInfo.closeTime} ‡∏ô.`,
            size: 'sm',
            color: '#666666',
            align: 'center'
          },
          {
            type: 'button',
            style: 'primary',
            action: {
              type: 'message',
              label: 'üí∞ ‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡∏°‡πà',
              text: '‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤'
            },
            margin: 'md'
          }
        ]
      }
    }
  };
}

// ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
function getHelpMessage() {
  return {
    type: 'flex',
    altText: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ',
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: 'ü§ñ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ',
            weight: 'bold',
            size: 'xl',
            color: '#1DB446'
          }
        ]
      },
      body: {
        type: 'box',
        layout: 'vertical',
        spacing: 'md',
        contents: [
          {
            type: 'box',
            layout: 'baseline',
            contents: [
              {
                type: 'text',
                text: 'üí∞',
                size: 'sm',
                flex: 1
              },
              {
                type: 'text',
                text: '"‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤" - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£',
                size: 'sm',
                flex: 4,
                wrap: true
              }
            ]
          },
          {
            type: 'box',
            layout: 'baseline',
            contents: [
              {
                type: 'text',
                text: '‚è∞',
                size: 'sm',
                flex: 1
              },
              {
                type: 'text',
                text: '"‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î" - ‡∏î‡∏π‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£',
                size: 'sm',
                flex: 4,
                wrap: true
              }
            ]
          },
          {
            type: 'box',
            layout: 'baseline',
            contents: [
              {
                type: 'text',
                text: 'üìç',
                size: 'sm',
                flex: 1
              },
              {
                type: 'text',
                text: '"‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà" - ‡∏î‡∏π‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡πâ‡∏≤‡∏ô',
                size: 'sm',
                flex: 4,
                wrap: true
              }
            ]
          },
          {
            type: 'box',
            layout: 'baseline',
            contents: [
              {
                type: 'text',
                text: '‚òéÔ∏è',
                size: 'sm',
                flex: 1
              },
              {
                type: 'text',
                text: '"‡πÇ‡∏ó‡∏£" - ‡∏î‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
                size: 'sm',
                flex: 4,
                wrap: true
              }
            ]
          },
          {
            type: 'box',
            layout: 'baseline',
            contents: [
              {
                type: 'text',
                text: '‚ùå',
                size: 'sm',
                flex: 1
              },
              {
                type: 'text',
                text: '"‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" - ‡∏´‡∏¢‡∏∏‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
                size: 'sm',
                flex: 4,
                wrap: true
              }
            ]
          }
        ]
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: '‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ üòä',
            size: 'sm',
            color: '#666666',
            align: 'center'
          }
        ]
      }
    }
  };
}

// ===================== UTILITY FUNCTIONS =====================

// ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î session ‡πÄ‡∏Å‡πà‡∏≤ (‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
setInterval(() => {
  const now = new Date();
  Object.keys(userSessions).forEach(userId => {
    const session = userSessions[userId];
    const timeDiff = now - session.lastActivity;
    // ‡∏•‡∏ö session ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
    if (timeDiff > 60 * 60 * 1000) {
      delete userSessions[userId];
    }
  });
  
  console.log(`üßπ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î sessions ‡πÄ‡∏Å‡πà‡∏≤ - ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ${Object.keys(userSessions).length} ‡∏Ñ‡∏ô`);
}, 60 * 60 * 1000);

// Error handler
app.use((error, req, res, next) => {
  console.error('‚ùå Server Error:', error);
  res.status(500).json({
    error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå',
    message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
  });
});

// ===================== SERVER STARTUP =====================

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Server
const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log('\n' + '='.repeat(50));
  console.log(`üöÄ ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!`);
  console.log(`üåê URL: http://localhost:${port}`);
  console.log(`üì± ‡∏£‡πâ‡∏≤‡∏ô: ${shopInfo.name}`);
  console.log(`‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£: ${shopInfo.openTime} - ${shopInfo.closeTime} ‡∏ô.`);
  console.log(`üìû ‡πÇ‡∏ó‡∏£: ${shopInfo.phone}`);
  console.log('='.repeat(50));
  
  // ‡πÅ‡∏™‡∏î‡∏á Available Endpoints
  console.log('\nüìç Endpoints ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:');
  console.log(`   GET  /        - ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å`);
  console.log(`   GET  /status  - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå`);
  console.log(`   GET  /test    - ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö`);
  console.log(`   GET  /api/prices - ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤`);
  console.log(`   POST /webhook - LINE Bot Webhook`);
  
  // ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å Excel (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  console.log('\nüìã ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤...');
  loadPriceTableFromExcel('./price_table.xlsx');
  
  console.log('\n‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å LINE Bot ‡πÅ‡∏•‡πâ‡∏ß!\n');
});

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('\nüì¥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå...');
  console.log('üëã ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£!');
  process.exit(0);
});

// Export ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
module.exports = { 
  app, 
  loadPriceTableFromExcel, 
  shopInfo, 
  priceTable, 
  userSessions 
};